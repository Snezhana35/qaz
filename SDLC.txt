SDLC
Жизненный цикл программного обеспечения (Software Development Life Cycle, SDLC) – условная схема, включающая фазы создания программного обеспечения.
Фазы:

Определение. Отвечает на вопрос «Что мы можем сделать?», «Что нужно клиенту?». т.е. здесь должно быть получение информации от всех заинтересованных сторон, таких как клиенты, сотрудники, программисты и т.д. Для клиента важно, чтобы команда проекта погрузилась в детали бизнеса и тщательнее разобралась, для какого рынка готовится продукт, как сделать его по-настоящему полезным.


Планирование. Включает вопрос «Что мы хотим?». Планирование, связанное с обеспечением качества и связанными с ним рисками, также выполняется на начальных этапах. Различные технические подходы изучаются и используются для успешной реализации проекта.
 

Минимальный риск учитывается. Следующим шагом является четкое определение требований к продукту. Утверждение принимается от клиента или путем анализа рынка. Все это обычно делается с помощью документа SRS (Спецификация требований к программному обеспечению), который содержит все требования проекта и спроектирован и разработан в течение жизненного цикла проекта.


Анализ требования. Отвечает на вопрос «Какие проблемы требуют решений?На этом этапе команда определяет требования к новому программному обеспечению, а также анализирует стоимость, требуемую для него.
Также детализирует риски и предоставляет подпланы для смягчения этих рисков. На этом этапе создается документ спецификации требований к программному обеспечению. 


Дизайн. Следующим этапом в жизненном цикле разработки программного обеспечения является разработка и ответ на вопрос «Как мы получим то, что мы хотим?».  Эта фаза определяет элементы системы, компоненты, уровень безопасности, модули, архитектуру, различные интерфейсы и типы данных, которыми оперирует система. Дизайн системы в общих чертах может быть сделан ручкой на листке бумаги - он определяет, как система будет выглядеть и как функционировать.  Как правило, в спецификации DDS - Design Document предлагается более одного подхода к проектированию архитектуры продукта.
Разработка и развертывание. Теперь мы создаем ПО. Все фактическое кодирование выполняется на этом этапе SDLC. Это наименее сложный шаг, если все предыдущие шаги были выполнены тщательно. 
В жизненном цикле разработки системы именно здесь пишется код, а если система включает хардверную часть, фаза внедрения будет включать в себя конфигурацию и настройку «железа» под определенные требования и функции. На этой стадии система готова к установке у заказчика, к запуску в боевом режиме. Возможно, конечным пользователям потребуется тренинг, чтобы они освоились с системой и знали, как ее использовать. 

Тестирование. Следующим этапом жизненного цикла разработки программного обеспечения является проверка того, «получили ли мы то, что хотим?». На этом этапе мы проверяем наличие дефектов и недостатков. Позже, после обнаружения, мы пытаемся решить все проблемы, пока продукт не будет соответствовать действующим спецификациям.
Эксплуатация и интеграция. «Давайте начнем использовать то, что получили». Этот шаг включает в себя обратную связь от конечных пользователей. В зависимости от их обратной связи нужно сделать изменения и корректировки. Часто эта часть процесса SDLC сначала происходит ограниченным образом. Иногда в соответствии с требованиями продукт может быть выпущен на определенном рынке до окончательного запуска.
Поддержка. Фазы жизненного цикла разработки программного обеспечения включают в себя еще один шаг, который заключается в поддержке. На этой фазе осуществляется периодическая техническая поддержка системы, чтобы убедиться, что система не устарела. Сюда входит замена старого оборудования и постоянная оценка производительности. Также здесь осуществляются апдейты определенных компонентов с целью удостовериться, что система отвечает нужным стандартам и новейшим технологиям, чтобы не быть подверженной текущим угрозам безопасности. 